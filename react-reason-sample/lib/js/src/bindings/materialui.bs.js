// Generated by BUCKLESCRIPT VERSION 2.1.0, PLEASE EDIT WITH CARE
'use strict';

var Js_option         = require("bs-platform/lib/js/js_option.js");
var Js_boolean        = require("bs-platform/lib/js/js_boolean.js");
var ReasonReact       = require("reason-react/lib/js/src/ReasonReact.js");
var MaterialUi        = require("material-ui");
var Js_null_undefined = require("bs-platform/lib/js/js_null_undefined.js");

function make(classes, color, disabled, disableRipple, rootRef, ariaLabel, children) {
  return ReasonReact.wrapJsForReason(MaterialUi.IconButton, {
              classes: Js_null_undefined.from_opt(classes),
              color: Js_null_undefined.from_opt(color),
              disabled: Js_null_undefined.from_opt(disabled),
              disableRipple: Js_null_undefined.from_opt(disableRipple),
              rootRef: Js_null_undefined.from_opt(rootRef),
              "aria-label": ariaLabel
            }, children);
}

var IconButton = /* module */[/* make */make];

function make$1(raised, color, className, dense, children) {
  return ReasonReact.wrapJsForReason(MaterialUi.Button, {
              raised: Js_null_undefined.from_opt(Js_option.map(Js_boolean.to_js_boolean, raised)),
              color: Js_null_undefined.from_opt(color),
              className: Js_null_undefined.from_opt(className),
              dense: Js_null_undefined.from_opt(dense)
            }, children);
}

var Button = /* module */[/* make */make$1];

function toString(position) {
  if (position) {
    switch (position[0]) {
      case 0 : 
          return /* Some */["static"];
      case 1 : 
          return /* Some */["fixed"];
      case 2 : 
          return /* Some */["absolute"];
      
    }
  } else {
    return /* None */0;
  }
}

function make$2(color, _, position, children) {
  return ReasonReact.wrapJsForReason(MaterialUi.AppBar, {
              color: Js_null_undefined.from_opt(color),
              position: Js_null_undefined.from_opt(toString(position))
            }, children);
}

var AppBar = /* module */[
  /* toString */toString,
  /* make */make$2
];

function make$3(className, children) {
  return ReasonReact.wrapJsForReason(MaterialUi.Toolbar, {
              className: Js_null_undefined.from_opt(className)
            }, children);
}

var Toolbar = /* module */[/* make */make$3];

function make$4(classes, children) {
  return ReasonReact.wrapJsForReason(MaterialUi.Table, {
              classes: classes
            }, children);
}

var Table = /* module */[/* make */make$4];

function make$5(classes, children) {
  return ReasonReact.wrapJsForReason(MaterialUi.TableBody, {
              classes: classes
            }, children);
}

var TableBody = /* module */[/* make */make$5];

function paddingToString(padding) {
  if (padding) {
    switch (padding[0]) {
      case 0 : 
          return /* Some */["default"];
      case 1 : 
          return /* Some */["checkbox"];
      case 2 : 
          return /* Some */["dense"];
      case 3 : 
          return /* Some */["none"];
      
    }
  } else {
    return /* None */0;
  }
}

function make$6(numeric, padding, classes, children) {
  return ReasonReact.wrapJsForReason(MaterialUi.TableCell, {
              classes: classes,
              numeric: Js_null_undefined.from_opt(numeric),
              padding: Js_null_undefined.from_opt(paddingToString(padding))
            }, children);
}

var TableCell = /* module */[
  /* paddingToString */paddingToString,
  /* make */make$6
];

exports.IconButton = IconButton;
exports.Button     = Button;
exports.AppBar     = AppBar;
exports.Toolbar    = Toolbar;
exports.Table      = Table;
exports.TableBody  = TableBody;
exports.TableCell  = TableCell;
/* ReasonReact Not a pure module */
