// Generated by ReScript, PLEASE EDIT WITH CARE
'use strict';

var Curry = require("bs-platform/lib/js/curry.js");
var Json_decode = require("@glennsl/bs-json/src/Json_decode.bs.js");

require('isomorphic-fetch')
;

function handleResponse(json) {
  var r_one = Json_decode.field("one", Json_decode.string, json);
  var r_key = Json_decode.field("key", Json_decode.string, json);
  var key = r_one;
  console.log("\n    response ist: " + key + "\n  ");
  
}

fetch("http://echo.jsontest.com/key/value/one/two").then(function (prim) {
        return prim.json();
      }).then(function (text) {
      return Promise.resolve(handleResponse(text));
    });

require('isomorphic-fetch')
;

function dataHandler(data) {
  console.log("self defined type -> data.one : " + data.one);
  console.log("self defined type -> data.key : " + data.key);
  
}

fetch("http://echo.jsontest.com/key/value/one/two").then(function (response) {
        return response.json();
      }).then(function (data) {
      return Promise.resolve(dataHandler(data));
    });

function responseTypeToJs(param) {
  return {
          one: param.one,
          key: param.key
        };
}

function responseTypeFromJs(param) {
  return {
          one: param.one,
          key: param.key
        };
}

require('isomorphic-fetch');
;

var fetchApiResponseInline = (()=>fetch("http://echo.jsontest.com/key/value/one/two").then(r => r.json()));

function handleData(data) {
  console.log("handleData");
  console.log(data.one);
  console.log(data.key);
  
}

function parseJsonData(data) {
  return {
          one: Json_decode.field("one", Json_decode.string, data),
          key: Json_decode.field("key", Json_decode.string, data)
        };
}

Curry._1(fetchApiResponseInline, undefined).then(function (data) {
      return Promise.resolve(handleData(parseJsonData(data)));
    });

exports.handleResponse = handleResponse;
exports.dataHandler = dataHandler;
exports.responseTypeToJs = responseTypeToJs;
exports.responseTypeFromJs = responseTypeFromJs;
exports.fetchApiResponseInline = fetchApiResponseInline;
exports.handleData = handleData;
exports.parseJsonData = parseJsonData;
/*  Not a pure module */
